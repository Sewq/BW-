{"version":3,"sources":["items/head.js","items/Rings.js","items/Neck.js","items/JewelerySet.js","items/Legs.js","items/Armor.js","items/ArmorSet.js","Stat.js","Expedition.js","App.js","reportWebVitals.js","index.js"],"names":["headPrefixes","name","dex","res","def","id","luck","hardness","headMainPart","ignor","spost","look","minDmg","maxDmg","dmg","char","wpl","headSufixes","str","bloodMod","ringPrefixes","odp","ringMain","ringPostfixes","wis","int","neckPrefixes","Modblood","neckMainBase","neckSufixes","jewelerySets","3","unik","4","5","hpMod","6","atackAmount","7","8","legPrefixes","legMainBase","deff","legSufixes","armorsPrefixes","CR","wiedza","palnCR","armorsMainBase","baseHp","armorsSufixes","ataki","armorSets","2","Stat","useState","playerDex","setPlayerDex","playerLevel","setPlayerLevel","playerSpost","setPlayerSpost","setStr","setDef","setLook","setChar","setWpl","setInt","setWis","setBaseHp","blood","setBlood","setcalculatedBaseHp","evoLevels","setEvoLevels","beheMultiplier","setBeheMultiplier","dexFromTalisman","setDexFromTalisman","spostFromTalisman","setSpostFromTalisman","levels","setLevels","maxLevels","setMaxLevels","additionalHit","setAdditionalHit","bossSpost","setBossSpost","bossDex","setBossDex","race","setRace","firstWeapon","setFirstWeapon","firstRingPref","setfirstRingPref","firstRingMain","setFirstRingMain","firstRingSuf","setFirstRingSuf","secondRingPref","setSecondRingPref","secondRingMain","setSecondRingMain","secondRingSuf","setSecondRingSuf","neckPref","setNeckPref","neckMain","setNeckMain","neckSuf","setNeckSuf","headPref","setHeadPref","headSuf","setHeadSuf","headMain","setHeadMain","armorPref","setArmorPref","armorMain","setArmorMain","armorSuf","setArmorSuf","legsPref","setLegsPref","legsMain","setLegsMainBase","legsSuf","setLegsSuf","handleFocus","event","target","select","missingLevelsPercent","additionalToHit","parseInt","dexHit","sumaHit","setTalismanDex","talismanLevel","setTalismanSpost","numberOrZero","value","parseFloat","hpWithMod","hp","mod","finalStrength","dexFromBehe","spostFromBehe","Math","ceil","type","style","marginLeft","placeholder","onFocus","onChange","e","s","hpBase","paddingLeft","onClick","paddingRight","htmlFor","selectedOption","JSON","parse","map","option","stringify","marginTop","Expedition","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2237f0ee.chunk.js","sourcesContent":["export let headPrefixes = [\n    {name: 'Bez glowy', dex: 0, res: 0, def: 0, id: -1},\n    {name: 'Tygrysia', dex: 34, res: 12, def: -12, id: 1},\n    {name: 'Runiczna', luck: 12, def: 37, hardness: 3, id: 2}\n];\n\nexport let headMainPart = [\n    {name: 'Bez glowy', ignor: 0, spost: 0, look: 0, def: 0},\n    {name: 'Opaska', ignor: 0.2, spost: 26, look: 32, def: 28},\n    {name: 'Bandana', minDmg: 7, maxDmg: 10, spost: 4, dmg: '1 / 4', def: 37},\n    {name: 'Korona', char: 26, wpl: 26, def: '1 / 4', hardness: 4}\n];\n\nexport let headSufixes = [\n    {name: 'Bez glowy', ignor: 0, spost: 0, look: 0, def: 0},\n    {name: 'Prekognicji', spost: 42},\n    {name: 'Adrenaliny', str: 34, spost: -12, dex: 31},\n    {name: 'Magii', bloodMod: -5, luck: 4, def: 4 / 4, hardness: 6}\n];\n","export const ringPrefixes = [\n    {name: 'Bez prefa', ignor: 0, spost: 0, look: 0, def: 0},\n    {name: 'Msciwy', look: -7, wpl: 30, id: 6},\n    {name: 'Tanczacy', bloodMod: -0.07, dex: 5, luck: 11, def: 4, id: 5},\n    {name: 'Sloneczny', look: 21, spost: 34, id: 7},\n    {name: 'Pajeczy', dex: 28, odp: 38, id: 4},\n    {name: 'Jastrzebi', wpl: 12, spost: 31, id: 3},\n    {name: 'Tytanowy', str: 21, char: 27, def: 34, id: 8}\n];\n\nexport const ringMain = [\n    {name: 'Bez ringa', ignor: 0, spost: 0, look: 0, def: 0},\n    {name: 'Pierscien', look: 11},\n    {name: 'Sygnet', wpl: 12, look: 4},\n    {name: 'Bransoleta', char: 26, wpl: -4}\n];\n\nexport const ringPostfixes = [\n    {name: 'Bez sufa', ignor: 0, spost: 0, look: 0, def: 0},\n    {name: 'Celnosci', dex: 28},\n    {name: 'Madrosci', wis: 25},\n    {name: 'Szczescia', luck: 19},\n    {name: 'Koncentracji', int: 26, wis: 31},\n    {name: 'Lewitacji', str: 25, dex: 24},\n    {name: 'Nietoperza', look: -12, spost: 28, dex: 24},\n    {name: 'Mlodosci', look: 20, str: 26, dex: 20}\n];\n","export const neckPrefixes = [\n    {name: 'Bez prefa', ignor: 0, spost: 0, look: 0, def: 0},\n    {name: 'Msciwy', look: -7, wpl: 30, id: 6},\n    {name: 'Tanczacy', Modblood: -0.10, dex: 27, luck: 12, id: 5},\n    {name: 'Sloneczny', look: 35, spost: 39, id: 7},\n    {name: 'Pajeczy', dex: 32, odp: 39, id: 4},\n    {name: 'Jastrzebi', wpl: 38, spost: 36, id: 3},\n    {name: 'Tytanowy', str: 33, char: 40, id: 8}\n];\n\nexport const neckMainBase = [\n    {name: 'Bez szyi', ignor: 0, spost: 0, look: 0, def: 0},\n    {name: 'Amulet', look: 29},\n    {name: 'Lancuch', char: -7, wpl: 32},\n    {name: 'Naszyjnik', char: -7, wpl: 7, look: 34},\n    {name: 'Apaszka', char: 29, look: 28},\n    {name: 'Krawat', char: 4, wpl: 4, look: 12}\n];\n\nexport const neckSufixes = [\n    {name: 'Bez sufa', ignor: 0, spost: 0, look: 0, def: 0},\n    {name: 'Celnosci', dex: 34},\n    {name: 'Szczescoa', luck: 21},\n    {name: 'Koncentracji', int: 37, wis: 37},\n    {name: 'Lewitacji', str: 32, dex: 33},\n    {name: 'Pielgrzyma', odp: 34, wis: 37}\n];\n\n//\n// Jastrzębi:\n// {id=3} {dmg:3/4,unik:0,06}\n// Pajęczy:\n// {id=4}{dmg:3/4,ignordef:0.06}\n// Tańczący:\n// {id=5}{dex:39,basehpmod:0.43}\n// Mściwy:\n// {id=6}{wpł:52,char:-7,ataki:3}\n// Słoneczny:\n// {id=7}{ataki:3,dmg:16}\n// Tytanowy:\n// {id=8}{str:22,odp:45}\n","export const jewelerySets = {\n    3: {dmg: '3/4', unik: 0.06},\n    4: {dmg: '3/4', ignor: 0.06},\n    5: {dex: 39, hpMod: 0.43},\n    6: {wpl: 52, char: -7, atackAmount: 3},\n    7: {dmg: 16, atackAmount: 3},\n    8: {str: 22, res: 45}\n};\n","export const legPrefixes = [\n    {name: 'Bez Prefa'},\n    {name: 'Runiczne', hardness: 6, luck: 11, def: 37, id: 2},\n    {name: 'Elfie', hardness: 4, dex: 45, def: 4}\n];\n\nexport const legMainBase = [\n    {name: 'Bez Spodni'},\n    {name: 'Spodnica', look: 30, dex: -8, luck: 17, dmg: 1 / 4, def: 50},\n    {name: 'Kilt', look: 29, dex: -4, luck: 5, dmg: 1 / 4, def: '1/4', deff: 30}\n];\n\nexport const legSufixes = [\n    {name: 'Bez Sufa'},\n    {name: 'Nocy', hardness: 4, dex: 46},\n    {name: 'Pasterza', hardness: 4, spost: 40, res: -7, def: -31}\n];\n\n","export const armorsPrefixes = [\n    {name: 'Bez Prefa'},\n    {name: 'Elfia', dex: 45, CR: 38, def: -20},\n    {name: 'Lowiecka', spost: 35, wiedza: 39, palnCR: -0.41},\n    {name: 'Runiczna', luck: 13, def: 53, hardness: 6, id: 2}\n];\n\nexport const armorsMainBase = [\n    {name: 'Bez Klaty'},\n    {name: 'Peleryna', def: 27, wpl: 29, dex: 12, res: 29, dmg: '1/4'},\n    {name: 'Zbroja warstwowa', hardness: 0.04, baseHp: 0.25, def: 65}\n];\n\nexport const armorsSufixes = [\n    {name: 'Bez Sufa'},\n    {name: 'Szybkosci', ataki: 2, palnCR: -74},\n    {name: 'Siewcy Smierci', dex: 24, res: -5, dmg: 21, def: 35}\n];\n\n","export const armorSets = {\n    2: {luck: 20, deff: 54, def: '3/4'}\n};\n","import React, {useState, useEffect} from 'react';\nimport {headPrefixes, headSufixes, headMainPart} from './items/head'\nimport {ringMain, ringPostfixes, ringPrefixes} from './items/Rings'\nimport {neckMainBase, neckPrefixes, neckSufixes} from './items/Neck'\nimport {jewelerySets} from \"./items/JewelerySet\";\nimport {legSufixes, legMainBase, legPrefixes} from \"./items/Legs\";\nimport {armorsMainBase, armorsPrefixes, armorsSufixes} from \"./items/Armor\";\nimport {armorSets} from \"./items/ArmorSet\";\n\nfunction Stat() {\n\n    const [playerDex, setPlayerDex] = useState(0);\n    const [playerLevel, setPlayerLevel] = useState(0);\n    const [playerSpost, setPlayerSpost] = useState(0);\n    const [str, setStr] = useState(0);\n    const [def, setDef] = useState(0);\n    const [look, setLook] = useState(0);\n    const [char, setChar] = useState(0);\n    const [wpl, setWpl] = useState(0);\n    const [int, setInt] = useState(0);\n    const [wis, setWis] = useState(0);\n    const [luck, setLuck] = useState(0);\n    const [baseHp, setBaseHp] = useState(0);\n    const [blood, setBlood] = useState(0);\n    const [calculatetBaseHp, setcalculatedBaseHp] = useState(0);\n\n    const [evoLevels, setEvoLevels] = useState(0);\n\n\n    const [finalDex, setFinalDex] = useState(0);\n    const [finalSpost, setFinalSpost] = useState(0);\n    const [finalStr, setFinalStr] = useState(0);\n    const [beheMultiplier, setBeheMultiplier] = useState(0);\n    const [dexFromTalisman, setDexFromTalisman] = useState(0);\n    const [spostFromTalisman, setSpostFromTalisman] = useState(0);\n\n    const [beheDex, setbeheDex] = useState(0);\n    const [beheSpost, setbeheSpost] = useState(0);\n\n    const [levels, setLevels] = useState(0);\n    const [maxLevels, setMaxLevels] = useState(0);\n    const [additionalHit, setAdditionalHit] = useState(0);\n    const [bossSpost, setBossSpost] = useState(0);\n    const [bossDex, setBossDex] = useState(0);\n    const [race, setRace] = useState({luck: 0, hpMod: 0});\n\n\n    const [firstWeapon, setFirstWeapon] = useState({hpMod: 0, luck: 0});\n    const [secondWeapon, setSecondWeapon] = useState({luck: 0, hpMod: 0});\n\n\n    const [firstRingPref, setfirstRingPref] = useState({luck: 0, hpMod: 0});\n    const [firstRingMain, setFirstRingMain] = useState({luck: 0, hpMod: 0});\n    const [firstRingSuf, setFirstRingSuf] = useState({luck: 0, hpMod: 0});\n\n    const [secondRingPref, setSecondRingPref] = useState({luck: 0, hpMod: 0});\n    const [secondRingMain, setSecondRingMain] = useState({luck: 0, hpMod: 0});\n    const [secondRingSuf, setSecondRingSuf] = useState({luck: 0, hpMod: 0});\n\n    const [neckPref, setNeckPref] = useState({luck: 0, hpMod: 0});\n    const [neckMain, setNeckMain] = useState({luck: 0, hpMod: 0});\n    const [neckSuf, setNeckSuf] = useState({luck: 0, hpMod: 0});\n\n\n    const [headPref, setHeadPref] = useState({luck: 0, hpMod: 0, spost: 0, dex: 0});\n    const [headSuf, setHeadSuf] = useState({luck: 0, hpMod: 0, spost: 0, dex: 0});\n    const [headMain, setHeadMain] = useState({luck: 0, hpMod: 0, spost: 0, dex: 0});\n\n\n    const [armorPref, setArmorPref] = useState({luck: 0, hpMod: 0});\n    const [armorMain, setArmorMain] = useState({luck: 0, hpMod: 0});\n    const [armorSuf, setArmorSuf] = useState({luck: 0, hpMod: 0});\n\n\n    const [legsPref, setLegsPref] = useState({luck: 0, hpMod: 0});\n    const [legsMain, setLegsMainBase] = useState({luck: 0, hpMod: 0});\n    const [legsSuf, setLegsSuf] = useState({luck: 0, hpMod: 0});\n\n    const handleFocus = (event) => event.target.select();\n\n    const missingLevelsPercent = ((maxLevels - levels) / maxLevels);\n\n    const additionalToHit = (parseInt(maxLevels) - parseInt(levels)) * missingLevelsPercent;\n\n    const some = (70 + (3 * parseInt(bossDex)) + parseInt(additionalToHit));\n    const dexHit = some - (3 * playerDex);\n\n    const suma = (70 + (3 * (parseInt(bossDex) + parseInt(bossSpost))) + parseInt(additionalToHit));\n    const sumaHit = suma - (3 * (parseInt(playerDex) + parseInt(playerSpost)));\n\n\n    const setTalismanDex = (talismanLevel) => setDexFromTalisman(15 * talismanLevel);\n\n    const setTalismanSpost = (spostFromTalisman) => setSpostFromTalisman(spostFromTalisman);\n\n    const onChange = selectedOption => setFirstWeapon(JSON.parse(selectedOption.target.value));\n\n    const onHeadPrefChange = selectedOption => setHeadPref(JSON.parse(selectedOption.target.value));\n    const onHeadMainChange = selectedOption => setHeadMain(JSON.parse(selectedOption.target.value));\n    const onHeadSufChange = selectedOption => setHeadSuf(JSON.parse(selectedOption.target.value));\n\n    const onArmorPrefChange = selectedOption => setArmorPref(JSON.parse(selectedOption.target.value));\n    const onArmorMainChange = selectedOption => setArmorMain(JSON.parse(selectedOption.target.value));\n    const onArmorSufChange = selectedOption => setArmorSuf(JSON.parse(selectedOption.target.value));\n\n    const onFirstRingPrefChange = selectedOption => setfirstRingPref(JSON.parse(selectedOption.target.value));\n    const onFirstRingMainChange = selectedOption => setFirstRingMain(JSON.parse(selectedOption.target.value));\n    const onFirstRingSufChange = selectedOption => setFirstRingSuf(JSON.parse(selectedOption.target.value));\n\n    const onSecondRingPrefChange = selectedOption => setSecondRingPref(JSON.parse(selectedOption.target.value));\n    const onSecondRingMainChange = selectedOption => setSecondRingMain(JSON.parse(selectedOption.target.value));\n    const onSecondRingSufChange = selectedOption => setSecondRingSuf(JSON.parse(selectedOption.target.value));\n\n    const onNeckPrefChange = selectedOption => setNeckPref(JSON.parse(selectedOption.target.value));\n    const onNeckMainBaseChange = selectedOption => setNeckMain(JSON.parse(selectedOption.target.value));\n    const onNeckSufChange = selectedOption => setNeckSuf(JSON.parse(selectedOption.target.value));\n\n    const onLegsPrefChange = selectedOption => setLegsPref(JSON.parse(selectedOption.target.value));\n    const onLegsMainBaseChange = selectedOption => setLegsMainBase(JSON.parse(selectedOption.target.value));\n    const onLegsSufChange = selectedOption => setLegsSuf(JSON.parse(selectedOption.target.value));\n\n    const numberOrZero = value => parseFloat(value) || 0;\n\n    const dexFromHead = () => numberOrZero(headMain.dex) + numberOrZero(headPref.dex) + numberOrZero(headSuf.dex);\n    const spostFromHead = () => numberOrZero(headMain.spost) + numberOrZero(headPref.spost) + numberOrZero(headSuf.spost);\n    const strFromHead = () => numberOrZero(headMain.str) + numberOrZero(headPref.str) + numberOrZero(headSuf.str);\n    const intFromHead = () => numberOrZero(headMain.int) + numberOrZero(headPref.int) + numberOrZero(headSuf.int);\n    const wplFromHead = () => numberOrZero(headMain.wpl) + numberOrZero(headPref.wpl) + numberOrZero(headSuf.wpl);\n    const lookFromHead = () => numberOrZero(headMain.look) + numberOrZero(headPref.look) + numberOrZero(headSuf.look);\n    const luckFromHead = () => numberOrZero(headMain.luck) + numberOrZero(headPref.luck) + numberOrZero(headSuf.luck);\n\n    const dexFromFirstRing = () => numberOrZero(firstRingPref.dex) + numberOrZero(firstRingMain.dex) + numberOrZero(firstRingSuf.dex);\n    const spostFromFirstRing = () => numberOrZero(firstRingPref.spost) + numberOrZero(firstRingMain.spost) + numberOrZero(firstRingSuf.spost);\n    const strFromFirstRing = () => numberOrZero(firstRingPref.str) + numberOrZero(firstRingMain.str) + numberOrZero(firstRingSuf.str);\n    const intFromFirstRing = () => numberOrZero(firstRingPref.int) + numberOrZero(firstRingMain.int) + numberOrZero(firstRingSuf.int);\n    const wplFromFirstRing = () => numberOrZero(firstRingPref.wpl) + numberOrZero(firstRingMain.wpl) + numberOrZero(firstRingSuf.wpl);\n    const lookFromFirstRing = () => numberOrZero(firstRingPref.look) + numberOrZero(firstRingMain.look) + numberOrZero(firstRingSuf.look);\n    const luckFromFirstRing = () => numberOrZero(firstRingPref.luck) + numberOrZero(firstRingMain.luck) + numberOrZero(firstRingSuf.luck);\n    const hpModFromFirstRing = () => numberOrZero(firstRingPref.hpMod) + numberOrZero(firstRingMain.hpMod) + numberOrZero(firstRingSuf.hpMod);\n\n    const dexFromSecondRing = () => numberOrZero(secondRingPref.dex) + numberOrZero(secondRingMain.dex) + numberOrZero(secondRingSuf.dex);\n    const spostFromSecondRing = () => numberOrZero(secondRingPref.spost) + numberOrZero(secondRingMain.spost) + numberOrZero(secondRingSuf.spost);\n    const strFromSecondRing = () => numberOrZero(secondRingPref.str) + numberOrZero(secondRingMain.str) + numberOrZero(secondRingSuf.str);\n    const intFromSecondRing = () => numberOrZero(secondRingPref.int) + numberOrZero(secondRingMain.int) + numberOrZero(secondRingSuf.int);\n    const wplFromSecondRing = () => numberOrZero(secondRingPref.wpl) + numberOrZero(secondRingMain.wpl) + numberOrZero(secondRingSuf.wpl);\n    const lookFromSecondRing = () => numberOrZero(secondRingPref.look) + numberOrZero(secondRingMain.look) + numberOrZero(secondRingSuf.look);\n    const luckFromSecondRing = () => numberOrZero(secondRingPref.luck) + numberOrZero(secondRingMain.luck) + numberOrZero(secondRingSuf.luck);\n    const hpModFromSecondRing = () => numberOrZero(secondRingPref.hpMod) + numberOrZero(secondRingMain.hpMod) + numberOrZero(secondRingSuf.hpMod);\n\n    const dexFromNeck = () => numberOrZero(neckPref.dex) + numberOrZero(neckMain.dex) + numberOrZero(neckSuf.dex);\n    const spostFromNeck = () => numberOrZero(neckPref.spost) + numberOrZero(neckMain.spost) + numberOrZero(neckSuf.spost);\n    const strFromNeck = () => numberOrZero(neckPref.str) + numberOrZero(neckMain.str) + numberOrZero(neckSuf.str);\n    const intFromNeck = () => numberOrZero(neckPref.int) + numberOrZero(neckMain.int) + numberOrZero(neckSuf.int);\n    const wplFromNeck = () => numberOrZero(neckPref.wpl) + numberOrZero(neckMain.wpl) + numberOrZero(neckSuf.wpl);\n    const lookFromNeck = () => numberOrZero(neckSuf.look) + numberOrZero(neckMain.look) + numberOrZero(neckSuf.look);\n    const luckFromNeck = () => numberOrZero(neckSuf.luck) + numberOrZero(neckMain.luck) + numberOrZero(neckSuf.luck);\n    const hpModFromNeck = () => numberOrZero(neckSuf.hpMod) + numberOrZero(neckMain.hpMod) + numberOrZero(neckSuf.hpMod);\n\n\n    const dexFromLegs = () => numberOrZero(legsPref.dex) + numberOrZero(legsMain.dex) + numberOrZero(legsSuf.dex);\n    const spostFromLegs = () => numberOrZero(legsPref.spost) + numberOrZero(legsMain.spost) + numberOrZero(legsSuf.spost);\n    const strFromLegs = () => numberOrZero(legsPref.str) + numberOrZero(legsMain.str) + numberOrZero(legsSuf.str);\n    const intFromLegs = () => numberOrZero(legsPref.int) + numberOrZero(legsMain.int) + numberOrZero(legsSuf.int);\n    const wplFromLegs = () => numberOrZero(legsPref.wpl) + numberOrZero(legsMain.wpl) + numberOrZero(legsSuf.wpl);\n    const lookFromLegs = () => numberOrZero(legsPref.look) + numberOrZero(legsMain.look) + numberOrZero(legsSuf.look);\n    const luckFromLegs = () => numberOrZero(legsPref.luck) + numberOrZero(legsMain.luck) + numberOrZero(legsSuf.luck);\n\n\n    const dexFromArmor = () => numberOrZero(armorPref.dex) + numberOrZero(armorMain.dex) + numberOrZero(armorSuf.dex);\n    const spostFromArmor = () => numberOrZero(armorPref.spost) + numberOrZero(armorMain.spost) + numberOrZero(armorSuf.spost);\n    const strFromArmor = () => numberOrZero(armorPref.str) + numberOrZero(armorMain.str) + numberOrZero(armorSuf.str);\n    const intFromArmor = () => numberOrZero(armorPref.int) + numberOrZero(armorMain.int) + numberOrZero(armorSuf.int);\n    const wplFromArmor = () => numberOrZero(armorPref.wpl) + numberOrZero(armorMain.wpl) + numberOrZero(armorSuf.wpl);\n    const lookFromArmor = () => numberOrZero(armorPref.look) + numberOrZero(armorMain.look) + numberOrZero(armorSuf.look);\n    const luckFromArmor = () => numberOrZero(armorPref.luck) + numberOrZero(armorMain.luck) + numberOrZero(armorSuf.luck);\n    const hpModFromArmor = () => numberOrZero(armorPref.hpMod) + numberOrZero(armorMain.hpMod) + numberOrZero(armorSuf.hpMod);\n\n\n    const jewelerySetBonusStr = () => {\n        if (neckPref.id && neckPref.id === firstRingPref.id && neckPref.id === secondRingPref.id) {\n            return numberOrZero(jewelerySets[neckPref.id].str);\n        }\n        return 0;\n    };\n\n    const jewelerySetBonusHpMod = () => {\n        if (neckPref.id && neckPref.id === firstRingPref.id && neckPref.id === secondRingPref.id) {\n            return numberOrZero(jewelerySets[neckPref.id].hpMod);\n        }\n        return 0;\n    };\n\n    const jewelerySetBonusSpost = () => {\n        if (neckPref.id && neckPref.id === firstRingPref.id && neckPref.id === secondRingPref.id) {\n            return numberOrZero(jewelerySets[neckPref.id].spost);\n        }\n        return 0;\n    };\n\n    const armorSetBonusStr = () => {\n        if (legsPref.id && legsPref.id === headPref.id && legsPref.id === armorPref.id) {\n            return numberOrZero(armorSets[legsPref.id].str);\n        }\n        return 0;\n    };\n\n    const armorSetBonusLuck = () => {\n        if (legsPref.id && legsPref.id === headPref.id && legsPref.id === armorPref.id) {\n            return numberOrZero(armorSets[legsPref.id].luck);\n        }\n        return 0;\n    };\n\n    const hpWithMod = (hp, mod) => numberOrZero(hp) * mod;\n\n    const finalStrength = () => numberOrZero(str) + strFromHead() + strFromFirstRing() + strFromSecondRing() + strFromNeck() + strFromLegs() + strFromArmor() + jewelerySetBonusStr() + armorSetBonusStr();\n    const finalInt = () => numberOrZero(int) + intFromHead() + intFromFirstRing() + intFromSecondRing() + intFromNeck() + intFromArmor() + intFromLegs();\n    const finalWpl = () => numberOrZero(wis) + wplFromHead() + wplFromFirstRing() + wplFromSecondRing() + wplFromNeck() + wplFromArmor() + wplFromLegs();\n    const finalLook = () => numberOrZero(look) + lookFromHead() + lookFromFirstRing() + lookFromSecondRing() + lookFromNeck() + lookFromLegs() + lookFromArmor();\n    const finalLuck = () => numberOrZero(luck) + race.luck + armorSetBonusLuck() + luckFromArmor() + luckFromFirstRing() + luckFromSecondRing() + luckFromHead() + luckFromLegs() + luckFromNeck();\n    const finalHp = () => Math.ceil(parseInt(baseHp) + (parseInt(baseHp) * race.hpMod) + hpWithMod(baseHp, hpModFromFirstRing()) + hpWithMod(baseHp, hpModFromSecondRing()) + hpWithMod(baseHp, hpModFromNeck()) + hpWithMod(baseHp, hpModFromArmor()) + hpWithMod(baseHp, jewelerySetBonusHpMod()));\n\n    const dexFromBehe = (parseInt(finalStrength()) * beheMultiplier);\n    const spostFromBehe = (parseInt(int) + parseInt(wis)) * beheMultiplier;\n\n\n    return (\n        <>\n            <p>\n                final\n                dex bez\n                evo: {numberOrZero(playerDex) + numberOrZero(dexFromBehe) + numberOrZero(dexFromTalisman) + dexFromHead() + dexFromFirstRing() + dexFromSecondRing() + dexFromNeck() + dexFromLegs() + dexFromArmor()}\n            </p>\n            <p>\n                final\n                spost bez\n                evo: {parseInt(playerSpost) + parseInt(spostFromBehe) + parseInt(spostFromTalisman) + spostFromHead() + spostFromFirstRing() + spostFromSecondRing() + spostFromNeck() + spostFromLegs() + spostFromArmor() + jewelerySetBonusSpost()}\n            </p>\n            <p>\n                final\n                sila bez evo: {finalStrength()}\n            </p>\n            <p>\n                final\n                int bez evo: {finalInt()}\n            </p>\n            <p>\n                final\n                wplywy bez evo: {finalWpl()}\n            </p>\n            <p>\n                final\n                wyglad bez evo: {finalLook()}\n            </p>\n            <p>\n\n                final hp: {finalHp()}\n            </p>\n            <p>\n\n                final luck bez evo: {finalLuck()}\n            </p>\n            <div>\n                Moj level:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={playerLevel}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => {\n                        setPlayerLevel(e.target.value);\n                        setEvoLevels((parseInt(e.target.value) - 65));\n\n                        let hpBase = 0;\n\n                        let s;\n                        for (s = 0; s <= levels; s++) {\n                            hpBase = hpBase + 4 + (s / 10);\n                            if (s % 10 === 0) {\n                                hpBase = hpBase + (s - 1);\n                            }\n                        }\n                        setcalculatedBaseHp(hpBase);\n                    }}\n                />\n                <label style={{paddingLeft: 30}}>Wolne punkty evo: {evoLevels}</label>\n            </div>\n            <div>\n                Moja krew:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={blood}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setBlood(e.target.value)}\n                />\n            </div>\n            <div>\n                Base hp:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={baseHp}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setBaseHp(e.target.value)}\n                />\n                <label style={{paddingLeft: 20}}>\n                    Modyfikator z broni: {firstWeapon.hpMod} %\n                </label>\n\n            </div>\n            <div>\n                Moj dex:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={playerDex}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setPlayerDex(e.target.value)}\n                />\n            </div>\n            <div>\n                Moj spost:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={playerSpost}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setPlayerSpost(e.target.value)}\n                />\n            </div>\n            <div>\n                Moja sila:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={str}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setStr(e.target.value)}\n                />\n            </div>\n            <div>\n\n                Moja inteligencja:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={int}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setInt(e.target.value)}\n                />\n            </div>\n            <div>\n\n                Moja wiedza:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={wis}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setWis(e.target.value)}\n                />\n            </div>\n            <div>\n\n                Odpornosc:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={def}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setDef(e.target.value)}\n                />\n            </div>\n            <div>\n\n                Moj wyglad:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={look}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setLook(e.target.value)}\n                />\n            </div>\n            <div>\n\n                Moja charyzma:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={char}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setChar(e.target.value)}\n                />\n            </div>\n            <div>\n\n                Moje wplywy:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={wpl}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setWpl(e.target.value)}\n                />\n            </div>\n            <p>\n                Rasa:\n                <div>\n                    <input onClick={() => setRace({luck: 10, hpMod: 0})} type=\"radio\" value=\"LM\" name=\"behe\"/> Lapacz Mysli\n                    <input onClick={() => setRace({luck: 0, hpMod: 0.2})} type=\"radio\" value=\"WZ\" name=\"behe\"/> Wladca Zwierzat\n                </div>\n            </p>\n            <p>\n\n                <div>\n                    <input onClick={() => setBeheMultiplier(0)} type=\"radio\" value=\"Behemot lv 0\" name=\"behe\"/> Behe lv 0\n                    <input onClick={() => setBeheMultiplier(0.25)} type=\"radio\" value=\"Behemot lv 3\" name=\"behe\"/> Behe lv 3\n                    <input onClick={() => setBeheMultiplier(0.4)} type=\"radio\" value=\"Behemot lv 4\" name=\"behe\"/> Behe lv 4\n                </div>\n\n                <div>\n                    <input onClick={() => setTalismanDex(0)} type=\"radio\" value=\"Zwinka lv 0\" name=\"zwinka\"/> Zwinka lv 0\n                    <input onClick={() => setTalismanDex(3)} type=\"radio\" value=\"Zwinka lv 3\" name=\"zwinka\"/> Zwinka lv 3\n                    <input onClick={() => setTalismanDex(4)} type=\"radio\" value=\"Zwinka lv 4\" name=\"zwinka\"/> Zwinka lv 4\n                </div>\n                <div>\n                    <input onClick={() => setTalismanSpost(0)} type=\"radio\" value=\"Spost lv 0\" name=\"Spost\"/> Spost lv 0\n                    <input onClick={() => setTalismanSpost(35)} type=\"radio\" value=\"Spost lv 3\" name=\"Spost\"/> Spost lv 3\n                    <input onClick={() => setTalismanSpost(50)} type=\"radio\" value=\"Spost lv 4\" name=\"Spost\"/> Spost lv 4\n                </div>\n            </p>\n            <p>\n                <div>\n                    <label style={{paddingRight: 20}} htmlFor=\"pref\">Palec 1:</label>\n                    <select id=\"pref\" onChange={onFirstRingPrefChange}>\n                        {ringPrefixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"base\" onChange={onFirstRingMainChange}>\n                        {ringMain.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"suf\" onChange={onFirstRingSufChange}>\n                        {ringPostfixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                </div>\n                <div>\n                    <label style={{paddingRight: 20}} htmlFor=\"pref\">Palec 2:</label>\n                    <select id=\"pref\" onChange={onSecondRingPrefChange}>\n                        {ringPrefixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"base\" onChange={onSecondRingMainChange}>\n                        {ringMain.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"suf\" onChange={onSecondRingSufChange}>\n                        {ringPostfixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                </div>\n                <div>\n                    <label style={{paddingRight: 20}} htmlFor=\"pref\">Szyja:</label>\n                    <select id=\"pref\" onChange={onNeckPrefChange}>\n                        {neckPrefixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"base\" onChange={onNeckMainBaseChange}>\n                        {neckMainBase.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"suf\" onChange={onNeckSufChange}>\n                        {neckSufixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n\n                </div>\n                <div>\n                    <label style={{paddingRight: 20}} htmlFor=\"pref\">Bron 1:</label>\n                    <select id=\"u\" onChange={onChange}>\n                        <option value={JSON.stringify({hpMod: 0, luck: 0})}>Bez broni</option>\n                        <option value={JSON.stringify({hpMod: 0.49, luck: 12})}>Opiekunczy</option>\n                        <option value={JSON.stringify({hpMod: 0.19, luck: 8})}>Msciwy</option>\n                    </select>\n                    <select id=\"i\">\n                        <option value={{}} onChange={() => {\n                        }}>Waki\n                        </option>\n                        <option value={{}} onChange={() => {\n                        }}>Naszyjnik\n                        </option>\n                    </select>\n                    <select id=\"o\">\n                        <option value={{}} onChange={() => {\n                        }}>gowna\n                        </option>\n                        <option value={{}} onChange={() => {\n                        }}>dupy\n                        </option>\n                    </select>\n                </div>\n                <div>\n                    <label style={{paddingRight: 20}} htmlFor=\"pref\">Bron 2:</label>\n                    <select id=\"a\">\n                        <option value={{}} onChange={() => {\n                        }}>Tanczacy\n                        </option>\n                        <option value={{}} onChange={() => {\n                        }}>Msciwy\n                        </option>\n                    </select>\n                    <select id=\"s\">\n                        <option value={{}} onChange={() => {\n                        }}>Krawat\n                        </option>\n                        <option value={{}} onChange={() => {\n                        }}>Naszyjnik\n                        </option>\n                    </select>\n                    <select id=\"d\">\n                        <option value={{}} onChange={() => {\n                        }}>gowna\n                        </option>\n                        <option value={{}} onChange={() => {\n                        }}>dupy\n                        </option>\n                    </select>\n                </div>\n                <div>\n                    <label style={{paddingRight: 20}} htmlFor=\"pref\">Glowa:</label>\n                    <select id=\"headSuf\" onChange={onHeadPrefChange}>\n                        {headPrefixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"headMain\" onChange={onHeadMainChange}>\n                        {headMainPart.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"headSuf\" onChange={onHeadSufChange}>\n                        {headSufixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n\n                    </select>\n                </div>\n                <div>\n                    <label style={{paddingRight: 20}} htmlFor=\"pref\">Klata:</label>\n                    <select id=\"headSuf\" onChange={onArmorPrefChange}>\n                        {armorsPrefixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"headMain\" onChange={onArmorMainChange}>\n                        {armorsMainBase.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"headSuf\" onChange={onArmorSufChange}>\n                        {armorsSufixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n\n                    </select>\n                </div>\n                <div>\n                    <label style={{paddingRight: 20}} htmlFor=\"pref\">Nogi:</label>\n                    <select id=\"headSuf\" onChange={onLegsPrefChange}>\n                        {legPrefixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"headMain\" onChange={onLegsMainBaseChange}>\n                        {legMainBase.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                    <select id=\"headSuf\" onChange={onLegsSufChange}>\n                        {legSufixes.map((option) => (\n                            <option key={option.name} value={JSON.stringify(option)}>{option.name}</option>\n                        ))}\n                    </select>\n                </div>\n            </p>\n            <hr/>\n            <div style={{marginTop: 20}}>Suma gracza: {parseInt(playerDex) + parseInt(playerSpost)}</div>\n            <div style={{marginTop: 20}}>Suma moba: {parseInt(bossDex) + parseInt(bossSpost)}</div>\n            <hr/>\n            <p>\n                Boss:\n            </p>\n            <div>\n                Max suma poziomow dla bossa:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={maxLevels}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setMaxLevels(e.target.value)}\n                />\n            </div>\n            <div>\n                Suma poziomow bioracych udzial:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={levels}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setLevels(e.target.value)}\n                />\n            </div>\n\n            <div>\n\n                Zwinka:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={bossDex}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setBossDex(e.target.value)}\n                />\n            </div>\n\n            <div>\n\n                Spostrzegawczosc:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={bossSpost}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setBossSpost(e.target.value)}\n                />\n            </div>\n\n            <div>\n\n                Dodatkowe Trafienie:\n                <input\n                    type=\"text\"\n                    style={{marginLeft: 10}}\n                    placeholder=\"Type stat...\"\n                    value={additionalHit}\n                    name=\"filterText\"\n                    onFocus={handleFocus}\n                    onChange={(e) => setAdditionalHit(e.target.value)}\n                />\n            </div>\n\n\n            <div style={{marginTop: 20}}>Trafienie zwinka: {dexHit ? dexHit : 0}%</div>\n            <div style={{marginTop: 20}}>Trafienie suma: {sumaHit ? sumaHit : 0}%</div>\n        </>\n    )\n}\n\nexport default Stat;\n","import React, {useState} from 'react';\nimport Stat from './Stat'\n\nfunction Expedition() {\n\n    return (\n        <div>\n            <Stat/>\n        </div>\n    )\n}\n\nexport default Expedition;\n","import React from 'react';\nimport './App.css';\nimport Expedition from \"./Expedition\";\n\nfunction App() {\n    return (\n        <div>\n            Hello from app\n            <Expedition/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}